@using Boonker.Data; 
@model UpdateViewModel;
@{
    ViewData["Title"] = "Insert";
}
<br>
<h1>View</h1>

@using (Html.BeginForm("Index", "Books", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<div class="form-label">
    <div class="form-group" style="color: white;">
        <label>Title</label>
        @Html.TextBoxFor(x => x.books.Title, new { @class = "form-control", @id = "exampleInputEmail1" })
    </div>
    <div class="col-form-label" style="color: white;">
        <label>Author</label>
        @Html.DropDownListFor(x => x.books.AuthorId, new SelectList(Model.Authors, "Value", "Text"), new { @class = "form-control", @id = "exampleInputEmail1" })
        <a href="https://localhost:44363/Author/CreateAuthor" class="btn btn-primary">Create New Author</a>
    </div>
    <div class="col-form-label" style="color: white;">
        <label>DSCR</label>
        @Html.TextAreaFor(x => x.books.DSCR, new { @class = "form-control", @id = "exampleInputEmail1" })
    </div>
    <div class="col-form-label" style="color: white;">
        <label>Price</label>
        @Html.TextBoxFor(x => x.books.Price, new { @class = "form-control", @id = "exampleInputEmail1" })
    </div>
    <div class="col-form-label" style="color: white; ">
        <label>Amount</label>
        @Html.TextBoxFor(x => x.books.Amount, new { @class = "form-control", @id = "exampleInputEmail1" })
    </div>
    <div class="col-form-label" style="color: white;">
        <label>Favorite</label>
        @Html.CheckBoxFor(x => x.books.IsFav, new { @class = "form-check-label", @id = "exampleInputEmail1" })
    </div>
    <div style="display: flex; color:white;">
        <label>Images</label>
        <ul class="nav">
            <li style="padding: 20px;">
                <div style="width: 200px; height: 200px;">
                    <img id="output" style="width: 80px;" height=100 />
                    <div class="col-form-label" style="color: white; width: 200px;">
                        @Html.TextBoxFor(x => x.Images.Image1,
                        new { @onchange = "loadFile(event, 'output')", @type = "file", @class = "form-control", @id = "exampleInputEmail1" })
                        @Html.ValidationMessageFor(x => x.Images.Image1, "", new { @class = "text-danger" })
                    </div>
                </div>

            </li>
            <li style="padding:20px;">
                <div style="width: 200px; height: 200px;">
                    <img id="output2" style="width: 80px;" height=100 />
                    <div class="col-form-label" style="color: white; width: 200px;">
                        @Html.TextBoxFor(x => x.Images.Image2,
                        new { @onchange = "loadFile(event, 'output2')", @type = "file", @class = "form-control", @id = "exampleInputEmail1" })
                        @Html.ValidationMessageFor(x => x.Images.Image2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </li>
            <li style="padding:20px;">
                <div style="width: 200px; height: 200px;">
                    <img id="output3" style="width: 80px;" height=100 />
                    <div class="col-form-label" style="color: white; width: 200px;">
                        @Html.TextBoxFor(x => x.Images.Image3,
                       new { @onchange = "loadFile(event, 'output3')", @type = "file", @class = "form-control", @id = "exampleInputEmail1" })
                        @Html.ValidationMessageFor(x => x.Images.Image3, "", new { @class = "text-danger" })
                    </div>
                </div>
            </li>
            <li style="padding:20px;">
                <div style="width: 200px; height: 200px;">
                    <img id="output4" style="width: 80px;" height=100 />
                    <div class="col-form-label" style="color: white; width: 200px;">
                        @Html.TextBoxFor(x => x.Images.Image4,
                       new { @onchange = "loadFile(event, 'output4')", @type = "file", @class = "form-control", @id = "exampleInputEmail1" })
                        @Html.ValidationMessageFor(x => x.Images.Image4, "", new { @class = "text-danger" })
                    </div>
                </div>
            </li>
            <li style="padding:20px;">
                <div style="width: 200px; height: 200px;">
                    <img id="output5" style="width: 80px;" height=100 />
                    <div class="col-form-label" style="color: white; width: 200px;">
                        @Html.TextBoxFor(x => x.Images.Image5,
                       new { @onchange = "loadFile(event, 'output5')", @type = "file", @class = "form-control", @id = "exampleInputEmail1" })
                        @Html.ValidationMessageFor(x => x.Images.Image5, "", new { @class = "text-danger" })
                    </div>
                </div>
            </li>
        </ul>
    </div>

    <script>
          var loadFile = function(event, id) {
            var output = document.getElementById(id);
            output.src = URL.createObjectURL(event.target.files[0]);
            output.onload = function() {
              URL.revokeObjectURL(output.src) // free memory
            }
          };
    </script>

    <div class="col-form-label" style="color: white;">
        <label>Category</label>
        @Html.DropDownListFor(x => x.books.CategoryId, new SelectList(Model.Categories, "Value", "Text"), new { @class = "form-control", @id = "exampleInputEmail1" })
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</div>
}